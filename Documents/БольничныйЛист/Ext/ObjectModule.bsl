
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если НЕ ЗначениеЗаполнено(Ответственный) Тогда
		Ответственный = ПараметрыСеанса.ТекущийПользователь;
	КонецЕсли;
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Движения.Начисления.Записывать = Истина;
	Движения.УчётЗатрат.Записывать = Истина;
	Движения.Хозрасчётный.Записывать = Истина;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	КадроваяИсторияСотрудниковСрезПоследних.Оклад КАК Оклад
	|ИЗ
	|	РегистрСведений.КадроваяИсторияСотрудников.СрезПоследних(&Период, Сотрудник = &Сотрудник) КАК КадроваяИсторияСотрудниковСрезПоследних";
	
	Запрос.УстановитьПараметр("Период", ЭтотОбъект.ДатаОкончания);
	Запрос.УстановитьПараметр("Сотрудник", ЭтотОбъект.Сотрудник);
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда
		ПараметрРасчета = 0;
	Иначе
		ПараметрРасчета = Запрос.Выполнить().Выгрузить()[0].Оклад;
	КонецЕсли;
	
	МесяцНачаисления = НачалоМесяца(ЭтотОбъект.ДатаНачала);
	МесяцОкончания     = НачалоМесяца(ЭтотОбъект.ДатаОкончания);  
	
	//Регистр "Начисления"
	Пока МесяцНачаисления <= МесяцОкончания Цикл
		Движение = Движения.Начисления.Добавить();
		Движение.Сторно 				 = Ложь;
		Движение.ВидРасчета              = ПланыВидовРасчета.Начисления.Больничный;
		Движение.ПериодДействияНачало    = Макс(ЭтотОбъект.ДатаНачала, МесяцНачаисления);
		Движение.ПериодДействияКонец     = Мин(ЭтотОбъект.ДатаОкончания, КонецМесяца(МесяцНачаисления));
		Движение.ПериодРегистрации       = ЭтотОбъект.ПериодНачисления;
		Движение.БазовыйПериодНачало     = Макс(ЭтотОбъект.ДатаНачала, МесяцНачаисления);
		Движение.БазовыйПериодКонец      = Мин(ЭтотОбъект.ДатаОкончания, КонецМесяца(МесяцНачаисления));
		Движение.Сотрудник               = Сотрудник;
		Движение.ПоказательРасчета       = ПараметрРасчета;
		
		МесяцНачаисления = ДобавитьМесяц(МесяцНачаисления, 1);    
	КонецЦикла;
	
	Движения.Начисления.Записать();
	Движения.Начисления.РассчитатьСуммуНачисления();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Начисления.Сотрудник КАК Сотрудник,
	|	СУММА(Начисления.Сумма) КАК Сумма,
	|	Начисления.ВидРасчета.СтатьяЗатрат КАК СтатьяЗатрат
	|ИЗ
	|	РегистрРасчета.Начисления КАК Начисления
	|ГДЕ
	|	Начисления.Регистратор = &Регистратор
	|
	|СГРУППИРОВАТЬ ПО
	|	Начисления.Сотрудник,
	|	Начисления.ВидРасчета.СтатьяЗатрат";
	
	Запрос.УстановитьПараметр("Регистратор", ЭтотОбъект.Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	//Регистр "Учет затрат"    
	ДвижениеЗатрат = Движения.УчётЗатрат.Добавить();
	ДвижениеЗатрат.Период          = Дата;
	ДвижениеЗатрат.Сумма           = Выборка.Сумма;
	ДвижениеЗатрат.СтатьяЗатрат    = Выборка.СтатьяЗатрат;
	
	// Регистр "Хозрасчетный"     
	ДвижениеХозрасчетный = Движения.Хозрасчётный.Добавить();
	ДвижениеХозрасчетный.СчетДт        = ПланыСчетов.Хозрасчетный.РасходыНаПродажу;     
	ДвижениеХозрасчетный.СчетКт        = ПланыСчетов.Хозрасчетный.РасчетыСПерсоналомПоОплатеТруда;
	ДвижениеХозрасчетный.Период        = Дата;        
	ДвижениеХозрасчетный.Сумма        = Выборка.Сумма;        
	ДвижениеХозрасчетный.Содержание    = "Отражено начисление по больничному листу";
	БухгалтерскийУчет.ЗаполнитьСубконтоПоСчету(ДвижениеХозрасчетный.СчетДт, 
	ДвижениеХозрасчетный.СубконтоДт, Выборка.СтатьяЗатрат);
	БухгалтерскийУчет.ЗаполнитьСубконтоПоСчету(ДвижениеХозрасчетный.СчетКт, 
	ДвижениеХозрасчетный.СубконтоКт, Выборка.Сотрудник);
КонецПроцедуры

