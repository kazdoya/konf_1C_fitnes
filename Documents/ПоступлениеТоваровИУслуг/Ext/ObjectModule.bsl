
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если НЕ ЗначениеЗаполнено(Ответственный) Тогда
		Ответственный = ПараметрыСеанса.ТекущийПользователь;
	КонецЕсли;
	//СуммаДокумента = Товары.Итог("Сумма") + ОписаниеУслуги.Итог("Сумма");
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)
	
	СтруктураУчетнаяПолитика = РегистрыСведений.УчётнаяПолитика.ПолучитьПоследнее(Дата).СпособУчетаЗапасов;
	Если СтруктураУчетнаяПолитика = Перечисления.СпособыСписанияЗапасов.FEFO Тогда
		ОтражатьСрокиГодности = Истина;
	Иначе
		ОтражатьСрокиГодности = Ложь;
	КонецЕсли;
	
	// регистр УчётЗатрат 
	Движения.УчётЗатрат.Записывать = Истина;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПоступлениеТоваровИУслугУслуги.СтатьяЗатрат КАК СтатьяЗатрат,
	|	СУММА(ПоступлениеТоваровИУслугУслуги.Сумма) КАК Сумма
	|ИЗ
	|	Документ.ПоступлениеТоваровИУслуг.Услуги КАК ПоступлениеТоваровИУслугУслуги
	|ГДЕ
	|	ПоступлениеТоваровИУслугУслуги.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ПоступлениеТоваровИУслугУслуги.СтатьяЗатрат";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Движение = Движения.УчётЗатрат.Добавить();
		Движение.Период = Дата;
		Движение.СтатьяЗатрат = ВыборкаДетальныеЗаписи.СтатьяЗатрат;
		Движение.Сумма = ВыборкаДетальныеЗаписи.Сумма;
	КонецЦикла;
	
	// регистр ТоварыНаСкладах 
	Движения.ТоварыНаСкладах.Записывать = Истина;
	//регистр бухгалтерии Хозрасчетный
	Движения.Хозрасчётный.Записывать = Истина;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПоступлениеТоваровИУслугТовары.Номенклатура КАК Номенклатура,
	|	ПоступлениеТоваровИУслугТовары.СрокГодности КАК СрокГодности,
	|	СУММА(ПоступлениеТоваровИУслугТовары.Количество) КАК Количество,
	|	СУММА(ПоступлениеТоваровИУслугТовары.Сумма) КАК Сумма,
	|	ПоступлениеТоваровИУслугТовары.Номенклатура.СчётБухгалтерскогоУчета КАК СчётБухгалтерскогоУчета,
	|	NULL КАК СтатьяЗатрат
	|ПОМЕСТИТЬ ВТ_Товары
	|ИЗ
	|	Документ.ПоступлениеТоваровИУслуг.Товары КАК ПоступлениеТоваровИУслугТовары
	|ГДЕ
	|	ПоступлениеТоваровИУслугТовары.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ПоступлениеТоваровИУслугТовары.Номенклатура,
	|	ПоступлениеТоваровИУслугТовары.СрокГодности,
	|	ПоступлениеТоваровИУслугТовары.Номенклатура.СчётБухгалтерскогоУчета
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПоступлениеТоваровИУслугУслуги.Услуга,
	|	NULL,
	|	СУММА(ПоступлениеТоваровИУслугУслуги.Количество),
	|	СУММА(ПоступлениеТоваровИУслугУслуги.Сумма),
	|	ПоступлениеТоваровИУслугУслуги.Услуга.СчётБухгалтерскогоУчета,
	|	ПоступлениеТоваровИУслугУслуги.Услуга.СтатьяЗатрат
	|ИЗ
	|	Документ.ПоступлениеТоваровИУслуг.Услуги КАК ПоступлениеТоваровИУслугУслуги
	|ГДЕ
	|	ПоступлениеТоваровИУслугУслуги.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ПоступлениеТоваровИУслугУслуги.Услуга,
	|	ПоступлениеТоваровИУслугУслуги.Услуга.СчётБухгалтерскогоУчета,
	|	ПоступлениеТоваровИУслугУслуги.Услуга.СтатьяЗатрат
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Товары.Номенклатура КАК Номенклатура,
	|	ВТ_Товары.СрокГодности КАК СрокГодности,
	|	ВТ_Товары.Количество КАК Количество,
	|	ВТ_Товары.Сумма КАК Сумма,
	|	ВТ_Товары.СчётБухгалтерскогоУчета КАК СчётБухгалтерскогоУчета,
	|	ВТ_Товары.СтатьяЗатрат КАК СтатьяЗатрат
	|ИЗ
	|	ВТ_Товары КАК ВТ_Товары";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Если Выборка.СчётБухгалтерскогоУчета = ПланыСчетов.Хозрасчетный.Товары ИЛИ Выборка.СчётБухгалтерскогоУчета = ПланыСчетов.Хозрасчетный.Материалы Тогда
			
			Движение = Движения.ТоварыНаСкладах.Добавить(); 
			Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
			Движение.Период = ВходящаяДата;
			Движение.Номенклатура = Выборка.Номенклатура;
			Движение.Склад = Склад;
			Движение.Количество = Выборка.Количество;
			Движение.Сумма = Выборка.Сумма;
			Если ОтражатьСрокиГодности Тогда 
				Движение.СрокГодности = Выборка.СрокГодности;
			КонецЕсли;
			
			Движение = Движения.Хозрасчётный.Добавить();
			Движение.СчетДт = Выборка.СчётБухгалтерскогоУчета;
			Движение.СчетКт = ПланыСчетов.Хозрасчетный.РасчетыСПоставщиками;
			Движение.Период = Дата;
			Движение.Сумма = Выборка.Сумма;
			Движение.Содержание = "Отражено поступление товарно-материальных ценностей от поставщика";
			Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчётные.Номенклатура] = Выборка.Номенклатура;
			Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчётные.Контрагенты] = Контрагент;
		Иначе 
			
			Движение = Движения.Хозрасчётный.Добавить();
			Движение.СчетДт = Выборка.СчётБухгалтерскогоУчета;
			Движение.СчетКт = ПланыСчетов.Хозрасчетный.РасчетыСПоставщиками;
			Движение.Период = Дата;
			Движение.Сумма = Выборка.Сумма;
			Движение.Содержание = "Отражено поступление услуг от поставщика";
			Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчётные.СтатьиЗатрат] = Выборка.СтатьяЗатрат;
			Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчётные.Контрагенты] = Контрагент;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры
