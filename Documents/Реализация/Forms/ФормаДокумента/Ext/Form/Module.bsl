
&НаКлиенте
Процедура УстановкаВидимости()
	Если НЕ КонтрагентЯвляетсяПокупателем(Объект.Контрагент) Тогда
		Элементы.Договор.Видимость = Истина;
	Иначе
		Элементы.Договор.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры 

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УстановкаВидимости();
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если НЕ ЗначениеЗаполнено(Объект.Ответственный) Тогда
		Объект.Ответственный = ПараметрыСеанса.ТекущийПользователь;
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Функция КонтрагентЯвляетсяПокупателем(КонтрагентСсылка)  
	
	Запрос = Новый Запрос;  
	Запрос.УстановитьПараметр("КонтрагентСсылка", КонтрагентСсылка);
	Запрос.УстановитьПараметр("ТипыКонтрагентовКлиент", Перечисления.ТипыКонтрагентов.Покупатель);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|    Контрагенты.Ссылка КАК Контрагент
	|ИЗ
	|    Справочник.Контрагенты КАК Контрагенты
	|ГДЕ
	|    Контрагенты.Ссылка = &КонтрагентСсылка
	|    И Контрагенты.ТипКонтрагента = &ТипыКонтрагентовКлиент";
	
	Результат = Запрос.Выполнить();
	
	Возврат Результат.Пустой();
	
КонецФункции


&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	УстановкаВидимости();
КонецПроцедуры


&НаКлиенте
Процедура ТоварыНоменклатураПриИзменении(Элемент)
	СТЧ = Элементы.Товары.ТекущиеДанные;
	
	Если ЗначениеЗаполнено(СТЧ.Номенклатура) Тогда
		СТЧ.Цена = РаботаСЦенамиСервер.ПолучитьЦенуПродажиНаДату(СТЧ.Номенклатура, , Объект.Дата);
	Иначе
		СТЧ.Цена = 0;
	КонецЕсли;  
	
	РаботаСТабличнымиЧастямиКлиент.ПересчитатьСуммуВСтрокеТЧ(СТЧ);
	ПересчетСуммыДокумента(); 
	
КонецПроцедуры

&НаКлиенте
Процедура ПересчетСуммыДокумента()
	Объект.СуммаДокумента = Объект.Товары.Итог("Сумма") + Объект.Услуги.Итог("Сумма") + Объект.Абонементы.Итог("Стоимость"); 
КонецПроцедуры

&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)
	СТЧ = Элементы.Товары.ТекущиеДанные;
	РаботаСТабличнымиЧастямиКлиент.ПересчитатьСуммуВСтрокеТЧ(СТЧ);
	ПересчетСуммыДокумента();
КонецПроцедуры

&НаКлиенте
Процедура УслугиУслугаПриИзменении(Элемент)
	СТЧ = Элементы.Услуги.ТекущиеДанные;
	СТЧ.Количество = 1;
	
	Если ЗначениеЗаполнено(СТЧ.Услуга) Тогда
		СТЧ.Цена = РаботаСЦенамиСервер.ПолучитьЦенуПродажиНаДату(СТЧ.Услуга, , Объект.Дата);
	Иначе
		СТЧ.Цена = 0;
	КонецЕсли;
	
	
	РаботаСТабличнымиЧастямиКлиент.ПересчитатьСуммуВСтрокеТЧ(СТЧ);
	ПересчетСуммыДокумента();
КонецПроцедуры

&НаКлиенте
Процедура УслугиКоличествоПриИзменении(Элемент)
	СТЧ = Элементы.Услуги.ТекущиеДанные;
	РаботаСТабличнымиЧастямиКлиент.ПересчитатьСуммуВСтрокеТЧ(СТЧ);
	ПересчетСуммыДокумента();
КонецПроцедуры

&НаКлиенте
Процедура УслугиЦенаПриИзменении(Элемент)
	СТЧ = Элементы.Услуги.ТекущиеДанные;
	РаботаСТабличнымиЧастямиКлиент.ПересчитатьСуммуВСтрокеТЧ(СТЧ);
	ПересчетСуммыДокумента();
КонецПроцедуры

&НаКлиенте
Процедура ТоварыЦенаПриИзменении(Элемент)
	СТЧ = Элементы.Товары.ТекущиеДанные;
	РаботаСТабличнымиЧастямиКлиент.ПересчитатьСуммуВСтрокеТЧ(СТЧ);
	ПересчетСуммыДокумента();
КонецПроцедуры

&НаКлиенте
Процедура АбонементыНоменклатураПриИзменении(Элемент)
	СТЧ = Элементы.Абонементы.ТекущиеДанные;
	
	Если ЗначениеЗаполнено(СТЧ.Номенклатура) Тогда
		СТЧ.Стоимость = РаботаСЦенамиСервер.ПолучитьЦенуПродажиНаДату(СТЧ.Номенклатура, , Объект.Дата);
	Иначе
		СТЧ.Стоимость = 0;
	КонецЕсли;
	
	СТЧ.КоличествоМесяцев = РаботаСНоменклатуройСервер.ПолучитьСрокДействияАбонементаПоНоменклатуре(СТЧ.Номенклатура);
	ПересчетСуммыДокумента();
КонецПроцедуры   

&НаСервере
Процедура СоздатьАбонементыНаСервере()
	
	Для Каждого СТЧ из Объект.Абонементы  Цикл
		Если НЕ ЗначениеЗаполнено(СТЧ.Абонементы) Тогда
			НовыйЭлемент = Справочники.Абонементы.СоздатьЭлемент();
			НовыйЭлемент.Наименование = АвтоНаименованиеВСтрокеТЧАбонементы(СТЧ); 
			НовыйЭлемент.Владелец = Объект.Контрагент;
			НовыйЭлемент.Номенклатура = СТЧ.Номенклатура;
			НовыйЭлемент.Менеджер = Объект.Сотрудник;
			НовыйЭлемент.ДатаПродажи = Объект.Дата;
			НовыйЭлемент.ДокументПродажи = Объект.Ссылка;
			Если СТЧ.Активировать = Истина Тогда	
				НовыйЭлемент.ДатаАктивации = Объект.Дата;
				НовыйЭлемент.ДатаОкончания = ДобавитьМесяц(Объект.Дата, СТЧ.КоличествоМесяцев);
			КонецЕсли;
			НовыйЭлемент.СрокДействия = СТЧ.КоличествоМесяцев;
			НовыйЭлемент.ДнейЗаморозки = РаботаСНоменклатуройСервер.ПолучитьДниЗаморозкиПоНоменклатуре(СТЧ.Номенклатура);
			НовыйЭлемент.ОстатокДнейЗаморозки = НовыйЭлемент.ДнейЗаморозки;
			НовыйЭлемент.Комментарий = "Элемент создан через документ реализации";
			НовыйЭлемент.Записать();
			СТЧ.Абонементы = НовыйЭлемент.Ссылка;
		КонецЕсли;
	КонецЦикла;
	
	ЭтотОбъект.Записать();
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьАбонементы(Команда) 
	
	Если ЭтотОбъект.Модифицированность или НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда 
		ДиалогСВопросом();	
	Иначе
		СоздатьАбонементыНаСервере();	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДиалогСВопросом()
	
	Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопроса",
	ЭтотОбъект);	
	
	ПоказатьВопрос(Оповещение,
	"Для выполнения команды ""Создать абонементы"" данные будут записаны?",
	РежимДиалогаВопрос.ОКОтмена,
	0, 
	КодВозвратаДиалога.ОК, 
	"Записать документ?" 
	);    
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияВопроса(Результат, Параметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.ОК Тогда	
		ЭтотОбъект.Записать();
		ОчиститьСообщения(); 
		Сообщить("Документ записан!");
		СоздатьАбонементыНаСервере();
	КонецЕсли;	
	
КонецПроцедуры


&НаСервере
Функция АвтоНаименованиеВСтрокеТЧАбонементы(СтрокаТЧ)
	СклонениеМесяца = "";
	Если СтрокаТЧ.КоличествоМесяцев = 1 Тогда
		СклонениеМесяца = "месяц";
	ИначеЕсли СтрокаТЧ.КоличествоМесяцев = 2 ИЛИ СтрокаТЧ.КоличествоМесяцев = 3 ИЛИ СтрокаТЧ.КоличествоМесяцев = 4 Тогда
		СклонениеМесяца = "месяца"; 
	Иначе
		СклонениеМесяца = "месяцев";
	КонецЕсли;
	
	Возврат СтрШаблон(" %1 (%2 на %3 %4)", Объект.Контрагент, СтрокаТЧ.Номенклатура, СтрокаТЧ.КоличествоМесяцев, СклонениеМесяца); 	
КонецФункции