
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если НЕ ЗначениеЗаполнено(Ответственный) Тогда
		Ответственный = ПараметрыСеанса.ТекущийПользователь;
	КонецЕсли;
	
	ДлительностьУслуг = РассчитатьДатуОкончанияЗаписи();
	 Если ДлительностьУслуг = 0 Тогда 
		 ДлительностьУслуг = 60;
	 КонецЕсли;
	 ДатаОкончанияЗаписи = ДатаЗаписи + ДлительностьУслуг*60;
	 СуммаДокумента = Услуги.Итог("Сумма") + Абонементы.Итог("Стоимость");
КонецПроцедуры

Функция РассчитатьДатуОкончанияЗаписи()
	
	ТЧУслуги = Услуги.Выгрузить(,"Услуга, Количество");
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТЧУслуги", ТЧУслуги);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТЧУслуги.Услуга КАК Номенклатура,
	|   ТЧУслуги.Количество КАК Количество
	|ПОМЕСТИТЬ ВТ_Номенклатура
	|ИЗ
	|	&ТЧУслуги КАК ТЧУслуги 
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(Ном.ДлительностьУслуги * Количество) КАК ДлительностьУслуги
	|ИЗ
	|	ВТ_Номенклатура КАК ВТ_Номенклатура
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Ном
	|		ПО ВТ_Номенклатура.Номенклатура = Ном.Ссылка";
	
	Рез = Запрос.Выполнить();
	Если Рез.Пустой() Тогда
		возврат 0;
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	возврат Выборка.ДлительностьУслуги;
	
КонецФункции

Процедура ОбработкаПроведения(Отказ, Режим)
		// регистр ЗаказыКлиентов Приход
	Движения.ЗаказыКлиентов.Записывать = Истина;
	Движение = Движения.ЗаказыКлиентов.Добавить();
	Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
	Движение.Период = Дата;
	Движение.Клиент = Клиент;
	Движение.ЗаказКлиента = Ссылка;
	Движение.Сумма = СуммаДокумента;

КонецПроцедуры
