
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.Реализация") Тогда
		Договор = ДанныеЗаполнения.Договор;
		Плательщик = ДанныеЗаполнения.Контрагент;
		ВидОперации = Перечисления.ВидыОперацийПоступленияДенег.ОплатаОтПокупателя;
		ДокументОснование = ДанныеЗаполнения.Ссылка;
		СуммаДокумента = ДанныеЗаполнения.СуммаДокумента;
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПоступлениеТоваровИУслуг") Тогда
		ВидОперации = Перечисления.ВидыОперацийПоступленияДенег.ВозвратОтПоставщика;
		ДокументОснование = ДанныеЗаполнения.Ссылка;
		Плательщик = ДанныеЗаполнения.Контрагент; 
		Договор = ДанныеЗаполнения.Договор;
		СуммаДокумента = ДанныеЗаполнения.СуммаДокумента;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если НЕ ЗначениеЗаполнено(Ответственный) Тогда
		Ответственный = ПараметрыСеанса.ТекущийПользователь;
	КонецЕсли;
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)
	// регистр ДенежныеСредства Приход
	Движения.ДенежныеСредства.Записывать = Истина;
	Движение = Движения.ДенежныеСредства.Добавить();
	Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
	Движение.Период = Дата;
	Движение.Касса = Касса;
	Движение.Сумма = СуммаДокумента;
	
	//регистр бухгалтерии Хозрасчетный
	Движения.Хозрасчётный.Записывать = Истина;
	АналитикаПроводки = ПолучитьАналитикуПроводки();
	
	Движение = Движения.Хозрасчётный.Добавить();
	Движение.СчетДт = АналитикаПроводки.СчетДебета;
	Движение.СчетКт = АналитикаПроводки.СчетКредита;
	Движение.Период = Дата;
	Движение.Сумма = СуммаДокумента;
	Движение.Содержание = АналитикаПроводки.СодержаниеОперации;
	БухгалтерскийУчет.ЗаполнитьСубконтоПоСчету(Движение.СчетДт, Движение.СубконтоДт, АналитикаПроводки.СубконтоДебет);
	БухгалтерскийУчет.ЗаполнитьСубконтоПоСчету(Движение.СчетКт, Движение.СубконтоКт, АналитикаПроводки.СубконтоКредит);
	
КонецПроцедуры


Функция ПолучитьАналитикуПроводки()
	
	ОплатаОтПокупателя          = Перечисления.ВидыОперацийПоступленияДенег.ОплатаОтПокупателя;
	ВозвратОтПоставщика     	= Перечисления.ВидыОперацийПоступленияДенег.ВозвратОтПоставщика;
	ВозвратОтПодотчетника     	= Перечисления.ВидыОперацийПоступленияДенег.ВозвратОтПодотчётника;
	
	СтруктураАналитики = Новый Структура;
	
	СтруктураАналитики.Вставить("СчетДебета", ПланыСчетов.Хозрасчетный.Касса);
	СтруктураАналитики.Вставить("СубконтоДебет", Касса);
	
	Если ВидОперации = ВозвратОтПоставщика Тогда
		СтруктураАналитики.Вставить("СчетКредита", ПланыСчетов.Хозрасчетный.РасчетыСПоставщиками);
		СтруктураАналитики.Вставить("СодержаниеОперации", "Возврат от поставщика наличными в кассу");
		СтруктураАналитики.Вставить("СубконтоКредит", Плательщик);
	ИначеЕсли ВидОперации = ВозвратОтПодотчетника Тогда 
		СтруктураАналитики.Вставить("СчетКредита", ПланыСчетов.Хозрасчетный.РасчетыСПодотчетнымиЛицами);
		СтруктураАналитики.Вставить("СодержаниеОперации", "Возврат подотчетных средств"); 
		СтруктураАналитики.Вставить("СубконтоКредит", Плательщик);
	Иначе
		СтруктураАналитики.Вставить("СчетКредита", ПланыСчетов.Хозрасчетный.РасчетыСПокупателями);
		СтруктураАналитики.Вставить("СодержаниеОперации", "Оплата от покупателя наличными в кассу"); 
		СтруктураАналитики.Вставить("СубконтоКредит", Плательщик);
	КонецЕсли;
	
	Возврат СтруктураАналитики;
	
КонецФункции